generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String               @id @default(cuid())
  name                 String
  email                String               @unique
  password             String
  role                 Role                 @default(USER)
  image                String?
  therapistSessions    Session[]            @relation("TherapistSessions")
  sessions             Session[]            @relation("UserSessions")
  passwordResetTokens  PasswordResetToken[]
}

model Session {
  id          String             @id @default(cuid())
  date        DateTime
  userId      String
  therapistId String
  chimeLink   String
  status      SessionStatus      @default(PENDING)
  therapist   User               @relation("TherapistSessions", fields: [therapistId], references: [id])
  user        User               @relation("UserSessions", fields: [userId], references: [id])
  statusLogs  SessionStatusLog[]
}

model SessionStatusLog {
  id         String         @id @default(cuid())
  sessionId  String
  fromStatus SessionStatus?
  toStatus   SessionStatus
  changedBy  String
  reason     String?
  notes      String?
  createdAt  DateTime       @default(now())
  session    Session        @relation(fields: [sessionId], references: [id])

  @@map("session_status_logs")
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  used      Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("password_reset_tokens")
}

enum Role {
  USER
  THERAPIST
  ADMIN
}

enum SessionStatus {
  PENDING
  CONFIRMED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}
